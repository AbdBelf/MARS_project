//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace MARS_Expert.WebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[][]))]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback setImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginTechnicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFullNameTechnicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConnectExpertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisconnectExpertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisconnectTechnicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConnectedExpertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNotificationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNotificationStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartVideoFlowOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopVideoFlowOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCompressionRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveCompressionRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveXmlFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateXmlFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMsgToExpertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveMsgFromExpertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMsgToTechOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveMsgFromTechOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExisteMsgFromTechOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExisteMsgFromExpertOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::MARS_Expert.Properties.Settings.Default.MARS_Expert_WebService_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event setImageCompletedEventHandler setImageCompleted;
        
        /// <remarks/>
        public event getImageCompletedEventHandler getImageCompleted;
        
        /// <remarks/>
        public event loginTechnicianCompletedEventHandler loginTechnicianCompleted;
        
        /// <remarks/>
        public event getFullNameTechnicianCompletedEventHandler getFullNameTechnicianCompleted;
        
        /// <remarks/>
        public event ConnectExpertCompletedEventHandler ConnectExpertCompleted;
        
        /// <remarks/>
        public event DisconnectExpertCompletedEventHandler DisconnectExpertCompleted;
        
        /// <remarks/>
        public event DisconnectTechnicianCompletedEventHandler DisconnectTechnicianCompleted;
        
        /// <remarks/>
        public event getConnectedExpertsCompletedEventHandler getConnectedExpertsCompleted;
        
        /// <remarks/>
        public event SendNotificationCompletedEventHandler SendNotificationCompleted;
        
        /// <remarks/>
        public event getNotificationInfoCompletedEventHandler getNotificationInfoCompleted;
        
        /// <remarks/>
        public event ApproveNotificationCompletedEventHandler ApproveNotificationCompleted;
        
        /// <remarks/>
        public event CancelNotificationCompletedEventHandler CancelNotificationCompleted;
        
        /// <remarks/>
        public event getNotificationStateCompletedEventHandler getNotificationStateCompleted;
        
        /// <remarks/>
        public event StartVideoFlowCompletedEventHandler StartVideoFlowCompleted;
        
        /// <remarks/>
        public event StopVideoFlowCompletedEventHandler StopVideoFlowCompleted;
        
        /// <remarks/>
        public event SendProcedureCompletedEventHandler SendProcedureCompleted;
        
        /// <remarks/>
        public event ReceiveProcedureCompletedEventHandler ReceiveProcedureCompleted;
        
        /// <remarks/>
        public event SendCompressionRateCompletedEventHandler SendCompressionRateCompleted;
        
        /// <remarks/>
        public event ReceiveCompressionRateCompletedEventHandler ReceiveCompressionRateCompleted;
        
        /// <remarks/>
        public event SaveXmlFileCompletedEventHandler SaveXmlFileCompleted;
        
        /// <remarks/>
        public event CreateXmlFileCompletedEventHandler CreateXmlFileCompleted;
        
        /// <remarks/>
        public event FileExistsCompletedEventHandler FileExistsCompleted;
        
        /// <remarks/>
        public event LoadFileCompletedEventHandler LoadFileCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event SendMsgToExpertCompletedEventHandler SendMsgToExpertCompleted;
        
        /// <remarks/>
        public event ReceiveMsgFromExpertCompletedEventHandler ReceiveMsgFromExpertCompleted;
        
        /// <remarks/>
        public event SendMsgToTechCompletedEventHandler SendMsgToTechCompleted;
        
        /// <remarks/>
        public event ReceiveMsgFromTechCompletedEventHandler ReceiveMsgFromTechCompleted;
        
        /// <remarks/>
        public event ExisteMsgFromTechCompletedEventHandler ExisteMsgFromTechCompleted;
        
        /// <remarks/>
        public event ExisteMsgFromExpertCompletedEventHandler ExisteMsgFromExpertCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] value, int t, string login) {
            this.Invoke("setImage", new object[] {
                        value,
                        t,
                        login});
        }
        
        /// <remarks/>
        public void setImageAsync(byte[] value, int t, string login) {
            this.setImageAsync(value, t, login, null);
        }
        
        /// <remarks/>
        public void setImageAsync(byte[] value, int t, string login, object userState) {
            if ((this.setImageOperationCompleted == null)) {
                this.setImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetImageOperationCompleted);
            }
            this.InvokeAsync("setImage", new object[] {
                        value,
                        t,
                        login}, this.setImageOperationCompleted, userState);
        }
        
        private void OnsetImageOperationCompleted(object arg) {
            if ((this.setImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getImage(string login) {
            object[] results = this.Invoke("getImage", new object[] {
                        login});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getImageAsync(string login) {
            this.getImageAsync(login, null);
        }
        
        /// <remarks/>
        public void getImageAsync(string login, object userState) {
            if ((this.getImageOperationCompleted == null)) {
                this.getImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImageOperationCompleted);
            }
            this.InvokeAsync("getImage", new object[] {
                        login}, this.getImageOperationCompleted, userState);
        }
        
        private void OngetImageOperationCompleted(object arg) {
            if ((this.getImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImageCompleted(this, new getImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/loginTechnician", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool loginTechnician(string login, string password) {
            object[] results = this.Invoke("loginTechnician", new object[] {
                        login,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void loginTechnicianAsync(string login, string password) {
            this.loginTechnicianAsync(login, password, null);
        }
        
        /// <remarks/>
        public void loginTechnicianAsync(string login, string password, object userState) {
            if ((this.loginTechnicianOperationCompleted == null)) {
                this.loginTechnicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginTechnicianOperationCompleted);
            }
            this.InvokeAsync("loginTechnician", new object[] {
                        login,
                        password}, this.loginTechnicianOperationCompleted, userState);
        }
        
        private void OnloginTechnicianOperationCompleted(object arg) {
            if ((this.loginTechnicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginTechnicianCompleted(this, new loginTechnicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFullNameTechnician", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFullNameTechnician() {
            object[] results = this.Invoke("getFullNameTechnician", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFullNameTechnicianAsync() {
            this.getFullNameTechnicianAsync(null);
        }
        
        /// <remarks/>
        public void getFullNameTechnicianAsync(object userState) {
            if ((this.getFullNameTechnicianOperationCompleted == null)) {
                this.getFullNameTechnicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFullNameTechnicianOperationCompleted);
            }
            this.InvokeAsync("getFullNameTechnician", new object[0], this.getFullNameTechnicianOperationCompleted, userState);
        }
        
        private void OngetFullNameTechnicianOperationCompleted(object arg) {
            if ((this.getFullNameTechnicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFullNameTechnicianCompleted(this, new getFullNameTechnicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConnectExpert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConnectExpert(string login, string name, string lastname, string ipaddress) {
            object[] results = this.Invoke("ConnectExpert", new object[] {
                        login,
                        name,
                        lastname,
                        ipaddress});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConnectExpertAsync(string login, string name, string lastname, string ipaddress) {
            this.ConnectExpertAsync(login, name, lastname, ipaddress, null);
        }
        
        /// <remarks/>
        public void ConnectExpertAsync(string login, string name, string lastname, string ipaddress, object userState) {
            if ((this.ConnectExpertOperationCompleted == null)) {
                this.ConnectExpertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectExpertOperationCompleted);
            }
            this.InvokeAsync("ConnectExpert", new object[] {
                        login,
                        name,
                        lastname,
                        ipaddress}, this.ConnectExpertOperationCompleted, userState);
        }
        
        private void OnConnectExpertOperationCompleted(object arg) {
            if ((this.ConnectExpertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectExpertCompleted(this, new ConnectExpertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DisconnectExpert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisconnectExpert(string login) {
            object[] results = this.Invoke("DisconnectExpert", new object[] {
                        login});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisconnectExpertAsync(string login) {
            this.DisconnectExpertAsync(login, null);
        }
        
        /// <remarks/>
        public void DisconnectExpertAsync(string login, object userState) {
            if ((this.DisconnectExpertOperationCompleted == null)) {
                this.DisconnectExpertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisconnectExpertOperationCompleted);
            }
            this.InvokeAsync("DisconnectExpert", new object[] {
                        login}, this.DisconnectExpertOperationCompleted, userState);
        }
        
        private void OnDisconnectExpertOperationCompleted(object arg) {
            if ((this.DisconnectExpertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisconnectExpertCompleted(this, new DisconnectExpertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DisconnectTechnician", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisconnectTechnician(string login) {
            object[] results = this.Invoke("DisconnectTechnician", new object[] {
                        login});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisconnectTechnicianAsync(string login) {
            this.DisconnectTechnicianAsync(login, null);
        }
        
        /// <remarks/>
        public void DisconnectTechnicianAsync(string login, object userState) {
            if ((this.DisconnectTechnicianOperationCompleted == null)) {
                this.DisconnectTechnicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisconnectTechnicianOperationCompleted);
            }
            this.InvokeAsync("DisconnectTechnician", new object[] {
                        login}, this.DisconnectTechnicianOperationCompleted, userState);
        }
        
        private void OnDisconnectTechnicianOperationCompleted(object arg) {
            if ((this.DisconnectTechnicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisconnectTechnicianCompleted(this, new DisconnectTechnicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getConnectedExperts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfAnyType")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public object[][] getConnectedExperts() {
            object[] results = this.Invoke("getConnectedExperts", new object[0]);
            return ((object[][])(results[0]));
        }
        
        /// <remarks/>
        public void getConnectedExpertsAsync() {
            this.getConnectedExpertsAsync(null);
        }
        
        /// <remarks/>
        public void getConnectedExpertsAsync(object userState) {
            if ((this.getConnectedExpertsOperationCompleted == null)) {
                this.getConnectedExpertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConnectedExpertsOperationCompleted);
            }
            this.InvokeAsync("getConnectedExperts", new object[0], this.getConnectedExpertsOperationCompleted, userState);
        }
        
        private void OngetConnectedExpertsOperationCompleted(object arg) {
            if ((this.getConnectedExpertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConnectedExpertsCompleted(this, new getConnectedExpertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendNotification(string login, int iInt, string techName, string techLastName, string breakdownType, string breakdown, string diagnostic) {
            object[] results = this.Invoke("SendNotification", new object[] {
                        login,
                        iInt,
                        techName,
                        techLastName,
                        breakdownType,
                        breakdown,
                        diagnostic});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendNotificationAsync(string login, int iInt, string techName, string techLastName, string breakdownType, string breakdown, string diagnostic) {
            this.SendNotificationAsync(login, iInt, techName, techLastName, breakdownType, breakdown, diagnostic, null);
        }
        
        /// <remarks/>
        public void SendNotificationAsync(string login, int iInt, string techName, string techLastName, string breakdownType, string breakdown, string diagnostic, object userState) {
            if ((this.SendNotificationOperationCompleted == null)) {
                this.SendNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNotificationOperationCompleted);
            }
            this.InvokeAsync("SendNotification", new object[] {
                        login,
                        iInt,
                        techName,
                        techLastName,
                        breakdownType,
                        breakdown,
                        diagnostic}, this.SendNotificationOperationCompleted, userState);
        }
        
        private void OnSendNotificationOperationCompleted(object arg) {
            if ((this.SendNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNotificationCompleted(this, new SendNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNotificationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] getNotificationInfo(string login) {
            object[] results = this.Invoke("getNotificationInfo", new object[] {
                        login});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getNotificationInfoAsync(string login) {
            this.getNotificationInfoAsync(login, null);
        }
        
        /// <remarks/>
        public void getNotificationInfoAsync(string login, object userState) {
            if ((this.getNotificationInfoOperationCompleted == null)) {
                this.getNotificationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNotificationInfoOperationCompleted);
            }
            this.InvokeAsync("getNotificationInfo", new object[] {
                        login}, this.getNotificationInfoOperationCompleted, userState);
        }
        
        private void OngetNotificationInfoOperationCompleted(object arg) {
            if ((this.getNotificationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNotificationInfoCompleted(this, new getNotificationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApproveNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ApproveNotification(string login) {
            object[] results = this.Invoke("ApproveNotification", new object[] {
                        login});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveNotificationAsync(string login) {
            this.ApproveNotificationAsync(login, null);
        }
        
        /// <remarks/>
        public void ApproveNotificationAsync(string login, object userState) {
            if ((this.ApproveNotificationOperationCompleted == null)) {
                this.ApproveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveNotificationOperationCompleted);
            }
            this.InvokeAsync("ApproveNotification", new object[] {
                        login}, this.ApproveNotificationOperationCompleted, userState);
        }
        
        private void OnApproveNotificationOperationCompleted(object arg) {
            if ((this.ApproveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveNotificationCompleted(this, new ApproveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelNotification(string login) {
            object[] results = this.Invoke("CancelNotification", new object[] {
                        login});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelNotificationAsync(string login) {
            this.CancelNotificationAsync(login, null);
        }
        
        /// <remarks/>
        public void CancelNotificationAsync(string login, object userState) {
            if ((this.CancelNotificationOperationCompleted == null)) {
                this.CancelNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelNotificationOperationCompleted);
            }
            this.InvokeAsync("CancelNotification", new object[] {
                        login}, this.CancelNotificationOperationCompleted, userState);
        }
        
        private void OnCancelNotificationOperationCompleted(object arg) {
            if ((this.CancelNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelNotificationCompleted(this, new CancelNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNotificationState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getNotificationState(string login) {
            object[] results = this.Invoke("getNotificationState", new object[] {
                        login});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getNotificationStateAsync(string login) {
            this.getNotificationStateAsync(login, null);
        }
        
        /// <remarks/>
        public void getNotificationStateAsync(string login, object userState) {
            if ((this.getNotificationStateOperationCompleted == null)) {
                this.getNotificationStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNotificationStateOperationCompleted);
            }
            this.InvokeAsync("getNotificationState", new object[] {
                        login}, this.getNotificationStateOperationCompleted, userState);
        }
        
        private void OngetNotificationStateOperationCompleted(object arg) {
            if ((this.getNotificationStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNotificationStateCompleted(this, new getNotificationStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartVideoFlow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartVideoFlow(string login) {
            object[] results = this.Invoke("StartVideoFlow", new object[] {
                        login});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartVideoFlowAsync(string login) {
            this.StartVideoFlowAsync(login, null);
        }
        
        /// <remarks/>
        public void StartVideoFlowAsync(string login, object userState) {
            if ((this.StartVideoFlowOperationCompleted == null)) {
                this.StartVideoFlowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartVideoFlowOperationCompleted);
            }
            this.InvokeAsync("StartVideoFlow", new object[] {
                        login}, this.StartVideoFlowOperationCompleted, userState);
        }
        
        private void OnStartVideoFlowOperationCompleted(object arg) {
            if ((this.StartVideoFlowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartVideoFlowCompleted(this, new StartVideoFlowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StopVideoFlow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StopVideoFlow(string login) {
            object[] results = this.Invoke("StopVideoFlow", new object[] {
                        login});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StopVideoFlowAsync(string login) {
            this.StopVideoFlowAsync(login, null);
        }
        
        /// <remarks/>
        public void StopVideoFlowAsync(string login, object userState) {
            if ((this.StopVideoFlowOperationCompleted == null)) {
                this.StopVideoFlowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopVideoFlowOperationCompleted);
            }
            this.InvokeAsync("StopVideoFlow", new object[] {
                        login}, this.StopVideoFlowOperationCompleted, userState);
        }
        
        private void OnStopVideoFlowOperationCompleted(object arg) {
            if ((this.StopVideoFlowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopVideoFlowCompleted(this, new StopVideoFlowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendProcedure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendProcedure(string login, int ProcID) {
            object[] results = this.Invoke("SendProcedure", new object[] {
                        login,
                        ProcID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendProcedureAsync(string login, int ProcID) {
            this.SendProcedureAsync(login, ProcID, null);
        }
        
        /// <remarks/>
        public void SendProcedureAsync(string login, int ProcID, object userState) {
            if ((this.SendProcedureOperationCompleted == null)) {
                this.SendProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendProcedureOperationCompleted);
            }
            this.InvokeAsync("SendProcedure", new object[] {
                        login,
                        ProcID}, this.SendProcedureOperationCompleted, userState);
        }
        
        private void OnSendProcedureOperationCompleted(object arg) {
            if ((this.SendProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendProcedureCompleted(this, new SendProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveProcedure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReceiveProcedure(string login) {
            object[] results = this.Invoke("ReceiveProcedure", new object[] {
                        login});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveProcedureAsync(string login) {
            this.ReceiveProcedureAsync(login, null);
        }
        
        /// <remarks/>
        public void ReceiveProcedureAsync(string login, object userState) {
            if ((this.ReceiveProcedureOperationCompleted == null)) {
                this.ReceiveProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveProcedureOperationCompleted);
            }
            this.InvokeAsync("ReceiveProcedure", new object[] {
                        login}, this.ReceiveProcedureOperationCompleted, userState);
        }
        
        private void OnReceiveProcedureOperationCompleted(object arg) {
            if ((this.ReceiveProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveProcedureCompleted(this, new ReceiveProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendCompressionRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendCompressionRate(string login, float rate) {
            object[] results = this.Invoke("SendCompressionRate", new object[] {
                        login,
                        rate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendCompressionRateAsync(string login, float rate) {
            this.SendCompressionRateAsync(login, rate, null);
        }
        
        /// <remarks/>
        public void SendCompressionRateAsync(string login, float rate, object userState) {
            if ((this.SendCompressionRateOperationCompleted == null)) {
                this.SendCompressionRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCompressionRateOperationCompleted);
            }
            this.InvokeAsync("SendCompressionRate", new object[] {
                        login,
                        rate}, this.SendCompressionRateOperationCompleted, userState);
        }
        
        private void OnSendCompressionRateOperationCompleted(object arg) {
            if ((this.SendCompressionRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCompressionRateCompleted(this, new SendCompressionRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveCompressionRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public float ReceiveCompressionRate(string login) {
            object[] results = this.Invoke("ReceiveCompressionRate", new object[] {
                        login});
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveCompressionRateAsync(string login) {
            this.ReceiveCompressionRateAsync(login, null);
        }
        
        /// <remarks/>
        public void ReceiveCompressionRateAsync(string login, object userState) {
            if ((this.ReceiveCompressionRateOperationCompleted == null)) {
                this.ReceiveCompressionRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveCompressionRateOperationCompleted);
            }
            this.InvokeAsync("ReceiveCompressionRate", new object[] {
                        login}, this.ReceiveCompressionRateOperationCompleted, userState);
        }
        
        private void OnReceiveCompressionRateOperationCompleted(object arg) {
            if ((this.ReceiveCompressionRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveCompressionRateCompleted(this, new ReceiveCompressionRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveXmlFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveXmlFile(string fileName, System.Xml.XmlNode XmlDoc) {
            object[] results = this.Invoke("SaveXmlFile", new object[] {
                        fileName,
                        XmlDoc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveXmlFileAsync(string fileName, System.Xml.XmlNode XmlDoc) {
            this.SaveXmlFileAsync(fileName, XmlDoc, null);
        }
        
        /// <remarks/>
        public void SaveXmlFileAsync(string fileName, System.Xml.XmlNode XmlDoc, object userState) {
            if ((this.SaveXmlFileOperationCompleted == null)) {
                this.SaveXmlFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveXmlFileOperationCompleted);
            }
            this.InvokeAsync("SaveXmlFile", new object[] {
                        fileName,
                        XmlDoc}, this.SaveXmlFileOperationCompleted, userState);
        }
        
        private void OnSaveXmlFileOperationCompleted(object arg) {
            if ((this.SaveXmlFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveXmlFileCompleted(this, new SaveXmlFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateXmlFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateXmlFile(string fileName, string content) {
            object[] results = this.Invoke("CreateXmlFile", new object[] {
                        fileName,
                        content});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateXmlFileAsync(string fileName, string content) {
            this.CreateXmlFileAsync(fileName, content, null);
        }
        
        /// <remarks/>
        public void CreateXmlFileAsync(string fileName, string content, object userState) {
            if ((this.CreateXmlFileOperationCompleted == null)) {
                this.CreateXmlFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateXmlFileOperationCompleted);
            }
            this.InvokeAsync("CreateXmlFile", new object[] {
                        fileName,
                        content}, this.CreateXmlFileOperationCompleted, userState);
        }
        
        private void OnCreateXmlFileOperationCompleted(object arg) {
            if ((this.CreateXmlFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateXmlFileCompleted(this, new CreateXmlFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FileExists(string fileName) {
            object[] results = this.Invoke("FileExists", new object[] {
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileExistsAsync(string fileName) {
            this.FileExistsAsync(fileName, null);
        }
        
        /// <remarks/>
        public void FileExistsAsync(string fileName, object userState) {
            if ((this.FileExistsOperationCompleted == null)) {
                this.FileExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileExistsOperationCompleted);
            }
            this.InvokeAsync("FileExists", new object[] {
                        fileName}, this.FileExistsOperationCompleted, userState);
        }
        
        private void OnFileExistsOperationCompleted(object arg) {
            if ((this.FileExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileExistsCompleted(this, new FileExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object LoadFile(string fileName) {
            object[] results = this.Invoke("LoadFile", new object[] {
                        fileName});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void LoadFileAsync(string fileName) {
            this.LoadFileAsync(fileName, null);
        }
        
        /// <remarks/>
        public void LoadFileAsync(string fileName, object userState) {
            if ((this.LoadFileOperationCompleted == null)) {
                this.LoadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFileOperationCompleted);
            }
            this.InvokeAsync("LoadFile", new object[] {
                        fileName}, this.LoadFileOperationCompleted, userState);
        }
        
        private void OnLoadFileOperationCompleted(object arg) {
            if ((this.LoadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFileCompleted(this, new LoadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFile(string fileName) {
            object[] results = this.Invoke("DeleteFile", new object[] {
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string fileName) {
            this.DeleteFileAsync(fileName, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string fileName, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        fileName}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMsgToExpert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMsgToExpert(string msg, string login) {
            this.Invoke("SendMsgToExpert", new object[] {
                        msg,
                        login});
        }
        
        /// <remarks/>
        public void SendMsgToExpertAsync(string msg, string login) {
            this.SendMsgToExpertAsync(msg, login, null);
        }
        
        /// <remarks/>
        public void SendMsgToExpertAsync(string msg, string login, object userState) {
            if ((this.SendMsgToExpertOperationCompleted == null)) {
                this.SendMsgToExpertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMsgToExpertOperationCompleted);
            }
            this.InvokeAsync("SendMsgToExpert", new object[] {
                        msg,
                        login}, this.SendMsgToExpertOperationCompleted, userState);
        }
        
        private void OnSendMsgToExpertOperationCompleted(object arg) {
            if ((this.SendMsgToExpertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMsgToExpertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveMsgFromExpert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveMsgFromExpert(string login) {
            object[] results = this.Invoke("ReceiveMsgFromExpert", new object[] {
                        login});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveMsgFromExpertAsync(string login) {
            this.ReceiveMsgFromExpertAsync(login, null);
        }
        
        /// <remarks/>
        public void ReceiveMsgFromExpertAsync(string login, object userState) {
            if ((this.ReceiveMsgFromExpertOperationCompleted == null)) {
                this.ReceiveMsgFromExpertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveMsgFromExpertOperationCompleted);
            }
            this.InvokeAsync("ReceiveMsgFromExpert", new object[] {
                        login}, this.ReceiveMsgFromExpertOperationCompleted, userState);
        }
        
        private void OnReceiveMsgFromExpertOperationCompleted(object arg) {
            if ((this.ReceiveMsgFromExpertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveMsgFromExpertCompleted(this, new ReceiveMsgFromExpertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMsgToTech", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMsgToTech(string msg, string login) {
            this.Invoke("SendMsgToTech", new object[] {
                        msg,
                        login});
        }
        
        /// <remarks/>
        public void SendMsgToTechAsync(string msg, string login) {
            this.SendMsgToTechAsync(msg, login, null);
        }
        
        /// <remarks/>
        public void SendMsgToTechAsync(string msg, string login, object userState) {
            if ((this.SendMsgToTechOperationCompleted == null)) {
                this.SendMsgToTechOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMsgToTechOperationCompleted);
            }
            this.InvokeAsync("SendMsgToTech", new object[] {
                        msg,
                        login}, this.SendMsgToTechOperationCompleted, userState);
        }
        
        private void OnSendMsgToTechOperationCompleted(object arg) {
            if ((this.SendMsgToTechCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMsgToTechCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveMsgFromTech", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveMsgFromTech(string login) {
            object[] results = this.Invoke("ReceiveMsgFromTech", new object[] {
                        login});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveMsgFromTechAsync(string login) {
            this.ReceiveMsgFromTechAsync(login, null);
        }
        
        /// <remarks/>
        public void ReceiveMsgFromTechAsync(string login, object userState) {
            if ((this.ReceiveMsgFromTechOperationCompleted == null)) {
                this.ReceiveMsgFromTechOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveMsgFromTechOperationCompleted);
            }
            this.InvokeAsync("ReceiveMsgFromTech", new object[] {
                        login}, this.ReceiveMsgFromTechOperationCompleted, userState);
        }
        
        private void OnReceiveMsgFromTechOperationCompleted(object arg) {
            if ((this.ReceiveMsgFromTechCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveMsgFromTechCompleted(this, new ReceiveMsgFromTechCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExisteMsgFromTech", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExisteMsgFromTech(string login) {
            object[] results = this.Invoke("ExisteMsgFromTech", new object[] {
                        login});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExisteMsgFromTechAsync(string login) {
            this.ExisteMsgFromTechAsync(login, null);
        }
        
        /// <remarks/>
        public void ExisteMsgFromTechAsync(string login, object userState) {
            if ((this.ExisteMsgFromTechOperationCompleted == null)) {
                this.ExisteMsgFromTechOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExisteMsgFromTechOperationCompleted);
            }
            this.InvokeAsync("ExisteMsgFromTech", new object[] {
                        login}, this.ExisteMsgFromTechOperationCompleted, userState);
        }
        
        private void OnExisteMsgFromTechOperationCompleted(object arg) {
            if ((this.ExisteMsgFromTechCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExisteMsgFromTechCompleted(this, new ExisteMsgFromTechCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExisteMsgFromExpert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExisteMsgFromExpert(string login) {
            object[] results = this.Invoke("ExisteMsgFromExpert", new object[] {
                        login});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExisteMsgFromExpertAsync(string login) {
            this.ExisteMsgFromExpertAsync(login, null);
        }
        
        /// <remarks/>
        public void ExisteMsgFromExpertAsync(string login, object userState) {
            if ((this.ExisteMsgFromExpertOperationCompleted == null)) {
                this.ExisteMsgFromExpertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExisteMsgFromExpertOperationCompleted);
            }
            this.InvokeAsync("ExisteMsgFromExpert", new object[] {
                        login}, this.ExisteMsgFromExpertOperationCompleted, userState);
        }
        
        private void OnExisteMsgFromExpertOperationCompleted(object arg) {
            if ((this.ExisteMsgFromExpertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExisteMsgFromExpertCompleted(this, new ExisteMsgFromExpertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getImageCompletedEventHandler(object sender, getImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void loginTechnicianCompletedEventHandler(object sender, loginTechnicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginTechnicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginTechnicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getFullNameTechnicianCompletedEventHandler(object sender, getFullNameTechnicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFullNameTechnicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFullNameTechnicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConnectExpertCompletedEventHandler(object sender, ConnectExpertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnectExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DisconnectExpertCompletedEventHandler(object sender, DisconnectExpertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisconnectExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisconnectExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DisconnectTechnicianCompletedEventHandler(object sender, DisconnectTechnicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisconnectTechnicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisconnectTechnicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getConnectedExpertsCompletedEventHandler(object sender, getConnectedExpertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConnectedExpertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConnectedExpertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendNotificationCompletedEventHandler(object sender, SendNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getNotificationInfoCompletedEventHandler(object sender, getNotificationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNotificationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNotificationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApproveNotificationCompletedEventHandler(object sender, ApproveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CancelNotificationCompletedEventHandler(object sender, CancelNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getNotificationStateCompletedEventHandler(object sender, getNotificationStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNotificationStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNotificationStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StartVideoFlowCompletedEventHandler(object sender, StartVideoFlowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartVideoFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartVideoFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StopVideoFlowCompletedEventHandler(object sender, StopVideoFlowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StopVideoFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StopVideoFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendProcedureCompletedEventHandler(object sender, SendProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReceiveProcedureCompletedEventHandler(object sender, ReceiveProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendCompressionRateCompletedEventHandler(object sender, SendCompressionRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCompressionRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCompressionRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReceiveCompressionRateCompletedEventHandler(object sender, ReceiveCompressionRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveCompressionRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveCompressionRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveXmlFileCompletedEventHandler(object sender, SaveXmlFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveXmlFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveXmlFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateXmlFileCompletedEventHandler(object sender, CreateXmlFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateXmlFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateXmlFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FileExistsCompletedEventHandler(object sender, FileExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadFileCompletedEventHandler(object sender, LoadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteFileCompletedEventHandler(object sender, DeleteFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendMsgToExpertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReceiveMsgFromExpertCompletedEventHandler(object sender, ReceiveMsgFromExpertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveMsgFromExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveMsgFromExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendMsgToTechCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReceiveMsgFromTechCompletedEventHandler(object sender, ReceiveMsgFromTechCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveMsgFromTechCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveMsgFromTechCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExisteMsgFromTechCompletedEventHandler(object sender, ExisteMsgFromTechCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExisteMsgFromTechCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExisteMsgFromTechCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExisteMsgFromExpertCompletedEventHandler(object sender, ExisteMsgFromExpertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExisteMsgFromExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExisteMsgFromExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591